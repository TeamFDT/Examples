<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="com.powerflasher.fdt.ui.editor.template.as3" deleted="false" description="Creates [Inject]" enabled="true" name="inject">[Inject]&#13;
public var ${name} : ${type};</template><template autoinsert="true" context="com.powerflasher.fdt.ui.editor.template.as3" deleted="false" description="Creates Inject Meta with name property" enabled="true" name="inject name">[Inject(name="${iName}")]&#13;
public var ${name} : ${type};</template><template autoinsert="true" context="com.powerflasher.fdt.ui.editor.template.as3" deleted="false" description="Creates injector class mapping." enabled="true" name="mapClass">injector.mapClass(${whenAskedFor}, ${instantiateClass});</template><template autoinsert="true" context="com.powerflasher.fdt.ui.editor.template.as3" deleted="false" description="Creates commandMap Event Mapping" enabled="true" name="mapCommand">commandMap.mapEvent(${EventClass}.${type}, ${CommandClass}, ${EventClass});</template><template autoinsert="true" context="com.powerflasher.fdt.ui.editor.template.as3" deleted="false" description="Creates eventMap Maping" enabled="true" name="mapListener">eventMap.mapListener(${specifier:value(eventDispatcher, view)}, ${EventClass}.${type}, ${handler}, ${EventClass});</template><template autoinsert="true" context="com.powerflasher.fdt.ui.editor.template.as3" deleted="false" description="Create viewMap Package name mapping." enabled="true" name="mapPackage">viewMap.mapPackage(${packageName});</template><template autoinsert="true" context="com.powerflasher.fdt.ui.editor.template.as3" deleted="false" description="Create injector rule mapping." enabled="true" name="mapRule">injector.mapRule(${whenAskedFor}, ${useRule});</template><template autoinsert="true" context="com.powerflasher.fdt.ui.editor.template.as3" deleted="false" description="Create injector Singleton mapping." enabled="true" name="mapSingleton">injector.mapSingleton(${whenAskedFor});</template><template autoinsert="true" context="com.powerflasher.fdt.ui.editor.template.as3" deleted="false" description="Create injector Singleton mapping of." enabled="true" name="mapSingletonOf">injector.mapSingletonOf(${whenAskedFor}, ${useSingletonOf});</template><template autoinsert="true" context="com.powerflasher.fdt.ui.editor.template.as3" deleted="false" description="Creates viewMap Type mapping." enabled="true" name="mapType">viewMap.mapType(${type});</template><template autoinsert="true" context="com.powerflasher.fdt.ui.editor.template.as3" deleted="false" description="Creates injector Value mapping." enabled="true" name="mapValue">injector.mapValue(${whenAskedFor}, ${useValue});</template><template autoinsert="true" context="com.powerflasher.fdt.ui.editor.template.as3" deleted="false" description="Creates MediatorMap view mapping." enabled="true" name="mapView">mediatorMap.mapView(${viewClassOrName}, ${mediatorClass});</template><template autoinsert="true" context="com.powerflasher.fdt.ui.editor.template.as3" deleted="false" description="Creates init with [PostConstruct]" enabled="true" name="postConstruct">[PostConstruct]&#13;
public function init() : void {&#13;
	&#13;
}</template></templates>